{
  "uid" : "baeb7a4c6a84b121",
  "name" : "Test_allure.test_al[2]",
  "fullName" : "test_all.Test_allure.test_al[2]",
  "historyId" : "3867afdd7e2fc220863b28332fe990f3",
  "time" : {
    "start" : 1534575475729,
    "stop" : 1534575475758,
    "duration" : 29
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 2 != 2",
  "statusTrace" : "self = <test_all.Test_allure object at 0x000001BAFD54C048>, a = 2\n\n    @pytest.mark.parametrize(\"a\", [1, 2, 3])\n    @allure.step('我是测试步骤001')\n    def test_al(self, a):\n        allure.attach('描述', '我是测试步骤001的描述～～～')\n>       assert a != 2\nE       assert 2 != 2\n\nScripts\\test_all.py:8: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 2 != 2",
    "statusTrace" : "self = <test_all.Test_allure object at 0x000001BAFD54C048>, a = 2\n\n    @pytest.mark.parametrize(\"a\", [1, 2, 3])\n    @allure.step('我是测试步骤001')\n    def test_al(self, a):\n        allure.attach('描述', '我是测试步骤001的描述～～～')\n>       assert a != 2\nE       assert 2 != 2\n\nScripts\\test_all.py:8: AssertionError",
    "steps" : [ {
      "name" : "我是测试步骤001",
      "time" : {
        "start" : 1534575475730,
        "stop" : 1534575475730,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "self = <test_all.Test_allure object at 0x000001BAFD54C048>, a = 2\n\n    @pytest.mark.parametrize(\"a\", [1, 2, 3])\n    @allure.step('我是测试步骤001')\n    def test_al(self, a):\n        allure.attach('描述', '我是测试步骤001的描述～～～')\n>       assert a != 2\nE       assert 2 != 2\n\nScripts\\test_all.py:8: AssertionError",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "4a336e00954f2f89",
        "name" : "描述",
        "source" : "4a336e00954f2f89.txt",
        "type" : "text/plain",
        "size" : 39
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "LAPTOP-NJ1CSL3A"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "12244-MainThread"
  }, {
    "name" : "suite",
    "value" : "test_all"
  }, {
    "name" : "testClass",
    "value" : "test_all"
  }, {
    "name" : "testMethod",
    "value" : "Test_allure.test_al[2]"
  }, {
    "name" : "package",
    "value" : "test_all"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "baeb7a4c6a84b121.json",
  "parameterValues" : [ ]
}